// <auto-generated />
using System;
using Kemar.UrgeTruck.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kemar.UrgeTruck.Repository.Migrations
{
    [DbContext(typeof(KUrgeTruckContext))]
    [Migration("20230712045431_Nullablecreadteby")]
    partial class Nullablecreadteby
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Context.DamageDetail", b =>
                {
                    b.Property<long>("DamageDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GRNDetailsId")
                        .HasColumnType("bigint");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DamageDetailId");

                    b.HasIndex("GRNDetailsId");

                    b.ToTable("DamageDetail");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ApplicationConfigMaster", b =>
                {
                    b.Property<int>("AppConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("AppConfigId");

                    b.ToTable("ApplicationConfigMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.CustomerMaster", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PinCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DeliveryChallanDetails", b =>
                {
                    b.Property<int>("DCDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChallanNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DCMId")
                        .HasColumnType("int");

                    b.Property<long>("GRNDetailsId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("DCDId");

                    b.HasIndex("DCMId");

                    b.HasIndex("GRNDetailsId");

                    b.ToTable("DeliveryChallanDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DeliveryChallanMaster", b =>
                {
                    b.Property<int>("DCMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DcStatus")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasMaxLength(250)
                        .HasColumnType("datetime2");

                    b.Property<long>("GRNId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("DCMId");

                    b.HasIndex("GRNId");

                    b.ToTable("DeliveryChallanMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Dispatch", b =>
                {
                    b.Property<int>("DispatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefNum")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DispatchId");

                    b.ToTable("Dispatch");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DispatchDetail", b =>
                {
                    b.Property<int>("DispatchDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DispatchDate")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<int>("DispatchId")
                        .HasColumnType("int");

                    b.Property<string>("ItemBarcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PartyDetails")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<long?>("StockId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DispatchDetailId");

                    b.HasIndex("DispatchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StockId");

                    b.ToTable("DispatchDetail");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.EmailConfig", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("EmailId");

                    b.ToTable("EmailConfig");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.FailureLog", b =>
                {
                    b.Property<int>("FailureLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("FailureTime")
                        .HasMaxLength(300)
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RepairTime")
                        .HasMaxLength(30)
                        .HasColumnType("datetime2");

                    b.HasKey("FailureLogId");

                    b.ToTable("FailureLog");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GRN", b =>
                {
                    b.Property<long>("GRNId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRNNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InvoiceFile")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InvoiceProductQuantity")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POFile")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PONumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("POProductQuantity")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("ProductMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("GRNId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductMasterId");

                    b.HasIndex("SupplierId");

                    b.ToTable("GRN");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GRNDetails", b =>
                {
                    b.Property<long>("GRNDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DropLoc")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("GRNId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductSerialKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RackNo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SubRack")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GRNDetailsId");

                    b.HasIndex("GRNId");

                    b.ToTable("GRNDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GatePassDetails", b =>
                {
                    b.Property<int>("GPDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcceptedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GatePassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RejectedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GPDId");

                    b.HasIndex("GatePassId");

                    b.ToTable("GatePassDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GatePassMaster", b =>
                {
                    b.Property<int>("GatePassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GatePassDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GatePassNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<bool>("RGPGenerated")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierMasterSupplierId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GatePassId");

                    b.HasIndex("POId");

                    b.HasIndex("SupplierMasterSupplierId");

                    b.ToTable("GatePassMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Location", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DIsplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LocationCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("LocationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParentLocationCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LocationId");

                    b.HasIndex("LocationCategoryId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.LocationCategory", b =>
                {
                    b.Property<int>("LocationCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LocationCategoryId");

                    b.ToTable("LocationCategory");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UomId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("UomId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategoryName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ProductMaster", b =>
                {
                    b.Property<long>("ProductMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HSNCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Make")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ProductMasterId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderDetails", b =>
                {
                    b.Property<int>("PODId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("POId")
                        .HasColumnType("int");

                    b.Property<long>("ProductMasterId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PODId");

                    b.HasIndex("POId");

                    b.HasIndex("ProductMasterId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderMaster", b =>
                {
                    b.Property<int>("POId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasMaxLength(250)
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("POId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrderMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.RGPMaster", b =>
                {
                    b.Property<int>("RGPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GatePassDetailsGPDId")
                        .HasColumnType("int");

                    b.Property<int>("GatePassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartCode")
                        .HasColumnType("int");

                    b.Property<string>("ProductSerialKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RGPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalNoOfRGPItems")
                        .HasColumnType("int");

                    b.HasKey("RGPId");

                    b.HasIndex("GatePassDetailsGPDId");

                    b.HasIndex("GatePassId");

                    b.ToTable("RGPMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Rate", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LocationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("RateValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TimeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeUnitValue")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("RateId");

                    b.HasIndex("LocationCategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.RetryObjectContainer", b =>
                {
                    b.Property<int>("RetryObjectContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsProcessed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("JobMilestoneId")
                        .HasColumnType("int");

                    b.Property<int>("MaxRetry")
                        .HasColumnType("int");

                    b.Property<int>("MilestoneActionsTrackingId")
                        .HasColumnType("int");

                    b.Property<int>("NoOfRetry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("NotifierName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RetryFailureReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TriggeredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleTransactionId")
                        .HasColumnType("int");

                    b.HasKey("RetryObjectContainerId");

                    b.ToTable("RetryObjectContainer");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.RoleMaster", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("RoleGroup")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleId");

                    b.ToTable("RoleMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ShiftMaster", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ShiftId");

                    b.ToTable("ShiftMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Stock", b =>
                {
                    b.Property<long>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ItemBarcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockEntryDate")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StockExitDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("StockId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.SupplierMaster", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ContanctNo")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PinCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("SupplierMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ThirdPartyServiceIntegrationTracking", b =>
                {
                    b.Property<int>("IntegrationTrackingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APIType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InitiatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IntegrationTrackingId");

                    b.ToTable("ThirdPartyServiceIntegrationTracking");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.TransGenerator", b =>
                {
                    b.Property<int>("TransactionIdKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LastTransactionNumber")
                        .HasColumnType("int");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TransactionIdKey");

                    b.ToTable("TransGenerator");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Uom", b =>
                {
                    b.Property<int>("UomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UomId");

                    b.ToTable("Uom");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserAccessManager", b =>
                {
                    b.Property<int>("UserAccessManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDeactivate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserScreenId")
                        .HasColumnType("int");

                    b.HasKey("UserAccessManagerId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserScreenId");

                    b.ToTable("UserAccessManager");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserLocationAccess", b =>
                {
                    b.Property<int>("UserLocationAccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserLocationAccessId");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLocationAccess");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptTerms")
                        .HasMaxLength(1)
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserManager");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserScreenMaster", b =>
                {
                    b.Property<int>("UserScreenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MenuIcon")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("RoutingURL")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ScreenCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UserScreenId");

                    b.ToTable("UserScreenMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Context.DamageDetail", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GRNDetails", "GRNDetails")
                        .WithMany()
                        .HasForeignKey("GRNDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRNDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DeliveryChallanDetails", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.DeliveryChallanMaster", "DeliveryChallanMaster")
                        .WithMany("DeliveryChallanDetails")
                        .HasForeignKey("DCMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GRNDetails", "GRNDetails")
                        .WithMany()
                        .HasForeignKey("GRNDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryChallanMaster");

                    b.Navigation("GRNDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DeliveryChallanMaster", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GRN", "GRN")
                        .WithMany("DeliveryChallanMaster")
                        .HasForeignKey("GRNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GRN");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DispatchDetail", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Dispatch", "Dispatch")
                        .WithMany("DispatchDetails")
                        .HasForeignKey("DispatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Product", "Products")
                        .WithMany("DispatchDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Stock", null)
                        .WithMany("DispatchDetails")
                        .HasForeignKey("StockId");

                    b.Navigation("Dispatch");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GRN", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Location", "Location")
                        .WithMany("GRN")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.ProductMaster", "ProductMaster")
                        .WithMany("GRN")
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.SupplierMaster", "SupplierMaster")
                        .WithMany("GRN")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("ProductMaster");

                    b.Navigation("SupplierMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GRNDetails", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GRN", "GRN")
                        .WithMany("GRNDetails")
                        .HasForeignKey("GRNId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GRN");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GatePassDetails", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GatePassMaster", "GatePassMaster")
                        .WithMany("GatePassDetails")
                        .HasForeignKey("GatePassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GatePassMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GatePassMaster", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderMaster", "PurchaseOrderMaster")
                        .WithMany("GatePassMaster")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.SupplierMaster", "SupplierMaster")
                        .WithMany("GatePassMaster")
                        .HasForeignKey("SupplierMasterSupplierId");

                    b.Navigation("PurchaseOrderMaster");

                    b.Navigation("SupplierMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Location", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.LocationCategory", "LocationCategory")
                        .WithMany("Locations")
                        .HasForeignKey("LocationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationCategory");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Product", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Product")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Uom", "Uom")
                        .WithMany("Products")
                        .HasForeignKey("UomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("Uom");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ProductMaster", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.ProductCategory", "ProductCategory")
                        .WithMany("ProductMaster")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderDetails", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderMaster", "PurchaseOrderMaster")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.ProductMaster", "ProductMaster")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("ProductMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductMaster");

                    b.Navigation("PurchaseOrderMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderMaster", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.SupplierMaster", "SupplierMaster")
                        .WithMany("PurchaseOrderMaster")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplierMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.RGPMaster", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GatePassDetails", "GatePassDetails")
                        .WithMany("RGPMaster")
                        .HasForeignKey("GatePassDetailsGPDId");

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.GatePassMaster", "GatePassMaster")
                        .WithMany("RGPMaster")
                        .HasForeignKey("GatePassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GatePassDetails");

                    b.Navigation("GatePassMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Rate", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.LocationCategory", "LocationCategory")
                        .WithMany("Rates")
                        .HasForeignKey("LocationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Product", "Product")
                        .WithMany("Rate")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationCategory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Stock", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Product", "Products")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Location", "Locations")
                        .WithMany("Stock")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locations");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserAccessManager", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.RoleMaster", "RoleMaster")
                        .WithMany("UserAccessManager")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.UserScreenMaster", "UserScreenMaster")
                        .WithMany("UserAccessManager")
                        .HasForeignKey("UserScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleMaster");

                    b.Navigation("UserScreenMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserLocationAccess", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.Location", "Location")
                        .WithMany("UserLocationAccess")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.UserManager", "UserManager")
                        .WithMany("UserLocationAccess")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("UserManager");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserManager", b =>
                {
                    b.HasOne("Kemar.UrgeTruck.Repository.Entities.RoleMaster", "RoleMaster")
                        .WithMany("UserManager")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Kemar.UrgeTruck.Repository.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("UserManagerId")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("UserManagerId");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("UserManager")
                                .HasForeignKey("UserManagerId");

                            b1.Navigation("UserManager");
                        });

                    b.Navigation("RefreshTokens");

                    b.Navigation("RoleMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.DeliveryChallanMaster", b =>
                {
                    b.Navigation("DeliveryChallanDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Dispatch", b =>
                {
                    b.Navigation("DispatchDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GRN", b =>
                {
                    b.Navigation("DeliveryChallanMaster");

                    b.Navigation("GRNDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GatePassDetails", b =>
                {
                    b.Navigation("RGPMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.GatePassMaster", b =>
                {
                    b.Navigation("GatePassDetails");

                    b.Navigation("RGPMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Location", b =>
                {
                    b.Navigation("GRN");

                    b.Navigation("Stock");

                    b.Navigation("UserLocationAccess");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.LocationCategory", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Rates");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Product", b =>
                {
                    b.Navigation("DispatchDetails");

                    b.Navigation("Rate");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ProductCategory", b =>
                {
                    b.Navigation("Product");

                    b.Navigation("ProductMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.ProductMaster", b =>
                {
                    b.Navigation("GRN");

                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.PurchaseOrderMaster", b =>
                {
                    b.Navigation("GatePassMaster");

                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.RoleMaster", b =>
                {
                    b.Navigation("UserAccessManager");

                    b.Navigation("UserManager");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Stock", b =>
                {
                    b.Navigation("DispatchDetails");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.SupplierMaster", b =>
                {
                    b.Navigation("GatePassMaster");

                    b.Navigation("GRN");

                    b.Navigation("PurchaseOrderMaster");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.Uom", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserManager", b =>
                {
                    b.Navigation("UserLocationAccess");
                });

            modelBuilder.Entity("Kemar.UrgeTruck.Repository.Entities.UserScreenMaster", b =>
                {
                    b.Navigation("UserAccessManager");
                });
#pragma warning restore 612, 618
        }
    }
}
